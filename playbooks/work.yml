- name: Playbook for downloading and setting up Xelix repositories
  hosts: localhost
  become: true
  connection: local

  pre_tasks:
    - name: Install build and dependencies (Ubuntu)
      ansible.builtin.apt:
        name:
          - default-jre
          - libcurl4-openssl-dev
          - liblz4-dev
          - libpango-1.0-0
          - libpangoft2-1.0-0
          - libpq-dev
          - libsnappy-dev
          - libssl-dev
          - locales-all
          - xmlsec1
          - curl
          - autoconf
          - automake
          - libtool
          - pkg-config
        state: present
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Install build and system dependencies (Fedora)
      ansible.builtin.dnf:
        name:
          - java-latest-openjdk
          - curl
          - autoconf
          - automake
          - libtool
          - pkgconfig
        state: present
      when: ansible_facts["distribution"] == "Fedora"

  tasks:
    # - name: Install Xelix repositories
    #   become_user: hh
    #   ansible.builtin.git:
    #     repo: "git@github.com:xelixdev/{{ item }}.git"
    #     dest: "~hh/dev/xelix/{{ item }}"
    #     version: main
    #   with_items:
    #     - access-scripts
    #     - email-extractor
    #     - file-processing
    #     - graph-webhook
    #     - internal-dashboard
    #     - onboarding-portal-backend
    #     - platform-api
    #     - platform-front-end
    #     - terraform

    # - name: Install libpostal
    #   block:
    #     - name: Download libpostal repository
    #       ansible.builtin.git:
    #         repo: https://github.com/openvenues/libpostal
    #         dest: /tmp/libpostal
    #         version: master
    #         depth: 1

    #     - name: Build libpostal
    #       ansible.builtin.shell:
    #         chdir: /tmp/libpostal
    #         cmd: |
    #           ./bootstrap.sh
    #           ./configure
    #           make -j4
    #           make install
    #           ldconfig
    #       args:
    #         creates: /usr/local/lib/pkgconfig/libpostal.pc

    #     - name: Cleanup
    #       ansible.builtin.file:
    #         path: /tmp/libpostal
    #         state: absent

    - name: Install python packages
      become_user: hh
      ansible.builtin.shell:
        chdir: "~hh/dev/xelix/{{ item }}"
        cmd: |
          poetry shell
          poetry config http-basic.codeartifact aws $CODEARTIFACT_TOKEN
          poetry config http-basic.xelix-deps aws $CODEARTIFACT_TOKEN
          poetry install --all-extras
        executable: /usr/bin/zsh
      args:
        creates: "~hh/.cache/pypoetry/virtualenvs/{{ item }}*"
      environment:
        PYCURL_SSL_LIBRARY: openssl
        LD_LIBRARY_PATH: /usr/local/lib
      with_items:
        - access-scripts
        - email-extractor
        - file-processing
        - graph-webhook
        - internal-dashboard
        - onboarding-portal-backend
        - platform-api

    - name: Install yarn packages
      become_user: hh
      ansible.builtin.shell:
        chdir: ~hh/dev/xelix/platform-front-end
        cmd: |
          npm install --global yarn
          yarn
        executable: /usr/bin/zsh
      register: yarn_install
      changed_when: yarn_install.rc == 0
